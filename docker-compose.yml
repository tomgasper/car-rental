services:
  webapi:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5150:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - carrental-network

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=carrental
    ports:
      - "5600:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - carrental-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      db:
        condition: service_healthy
    networks:
      - carrental-network

networks:
  carrental-network:
    driver: bridge

volumes:
  postgres_data: